# NOTE: This file was autogenerated by re_types_builder; DO NOT EDIT.

from __future__ import annotations

from typing import Sequence, Union

import pyarrow as pa
from attrs import define, field

from .. import datatypes
from .._baseclasses import (
    BaseExtensionArray,
    BaseExtensionType,
)

__all__ = ["Tensor", "TensorArray", "TensorArrayLike", "TensorLike", "TensorType"]


def _tensor_id_converter(x: datatypes.TensorIdLike) -> datatypes.TensorId:
    if isinstance(x, datatypes.TensorId):
        return x
    else:
        return datatypes.TensorId(x)


def _tensor_data_converter(x: datatypes.TensorDataLike) -> datatypes.TensorData:
    if isinstance(x, datatypes.TensorData):
        return x
    else:
        return datatypes.TensorData(x)


@define
class Tensor:
    """Storage for a `Tensor`."""

    id: datatypes.TensorId = field(converter=_tensor_id_converter)
    shape: list[datatypes.TensorDimension] = field()
    data: datatypes.TensorData = field(converter=_tensor_data_converter)


TensorLike = Tensor
TensorArrayLike = Union[
    Tensor,
    Sequence[TensorLike],
]


# --- Arrow support ---


class TensorType(BaseExtensionType):
    def __init__(self) -> None:
        pa.ExtensionType.__init__(
            self,
            pa.struct(
                [
                    pa.field(
                        "id",
                        pa.list_(pa.field("item", pa.int8(), nullable=False, metadata={}), 16),
                        nullable=False,
                        metadata={},
                    ),
                    pa.field(
                        "shape",
                        pa.list_(
                            pa.field(
                                "item",
                                pa.struct(
                                    [
                                        pa.field("size", pa.int64(), nullable=False, metadata={}),
                                        pa.field("name", pa.utf8(), nullable=True, metadata={}),
                                    ]
                                ),
                                nullable=False,
                                metadata={},
                            )
                        ),
                        nullable=False,
                        metadata={},
                    ),
                    pa.field(
                        "data",
                        pa.dense_union(
                            [
                                pa.field("_null_markers", pa.null(), nullable=True, metadata={}),
                                pa.field(
                                    "U8",
                                    pa.list_(pa.field("item", pa.uint8(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "U16",
                                    pa.list_(pa.field("item", pa.uint16(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "U32",
                                    pa.list_(pa.field("item", pa.uint32(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "U64",
                                    pa.list_(pa.field("item", pa.uint64(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "I8",
                                    pa.list_(pa.field("item", pa.int8(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "I16",
                                    pa.list_(pa.field("item", pa.int8(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "I32",
                                    pa.list_(pa.field("item", pa.int32(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "I64",
                                    pa.list_(pa.field("item", pa.int64(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "F16",
                                    pa.list_(pa.field("item", pa.float32(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "F32",
                                    pa.list_(pa.field("item", pa.float32(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "F64",
                                    pa.list_(pa.field("item", pa.float64(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                                pa.field(
                                    "JPEG",
                                    pa.list_(pa.field("item", pa.int8(), nullable=False, metadata={})),
                                    nullable=False,
                                    metadata={},
                                ),
                            ]
                        ),
                        nullable=False,
                        metadata={},
                    ),
                ]
            ),
            "rerun.datatypes.Tensor",
        )


class TensorArray(BaseExtensionArray[TensorArrayLike]):
    _EXTENSION_NAME = "rerun.datatypes.Tensor"
    _EXTENSION_TYPE = TensorType

    @staticmethod
    def _native_to_pa_array(data: TensorArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError


TensorType._ARRAY_TYPE = TensorArray

# TODO(cmc): bring back registration to pyarrow once legacy types are gone
# pa.register_extension_type(TensorType())
