include "arrow/attributes.fbs";
include "rust/attributes.fbs";
include "fbs/attributes.fbs";

namespace rerun.datatypes;

// ---

struct Unused (order: 100, transparent) {
  unused: bool (order: 100, transparent);
}

// TODO(jleibs): Make this an enum once we have enum support
// https://github.com/rerun-io/rerun/issues/3009
union TensorMeaning (
  "attr.rust.derive": "Copy, PartialEq",
  order: 200
) {
  /// The tensor represents arbitrary data
  Data: Unused (order: 100, transparent),
  /// The inner-most tensor dimension represent R, G, B, and optional A channels
  // TODO(jleibs): This should probably be RGBA but codegen re-capitalizes it
  Rgba: Unused (order: 200, transparent),
  /// The inner-most tensor dimension represents a mono color channel
  Mono: Unused (order: 300, transparent),
  /// The inner-most tensor dimension represents a ClassId
  ClassId: Unused (order: 400, transparent),
  /// The inner-most tensor dimension represents a measurement of depth
  Depth: Unused (order: 500, transparent),
}
