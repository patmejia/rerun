include "arrow/attributes.fbs";
include "fbs/attributes.fbs";

namespace rerun.datatypes;

// ---

table U8Data (order: 100, transparent) {
  data: [ubyte] (order: 100);
}

table U16Data(order: 100, transparent) {
  data: [ushort] (order: 100);
}

table U32Data(order: 100, transparent) {
  data: [uint] (order: 100);
}

table U64Data(order: 100, transparent) {
  data: [ulong] (order: 100);
}

table I8Data(order: 100, transparent) {
  data: [byte] (order: 100);
}

table I16Data(order: 100, transparent) {
  data: [byte] (order: 100);
}

table I32Data(order: 100, transparent) {
  data: [int] (order: 100);
}

table I64Data(order: 100, transparent) {
  data: [long] (order: 100);
}

// TODO: F16Data
table F16Data(order: 100, transparent) {
  data: [float] (order: 100);
}

table F32Data(order: 100, transparent) {
  data: [float] (order: 100);
}

table F64Data(order: 100, transparent) {
  data: [double] (order: 100);
}

table JPEGData(order: 100, transparent) {
  data: [byte] (order: 100);
}


/// Storage for a `Tensor`
union TensorData (
  order: 100,
  "attr.rust.derive": "PartialEq"
) {
  U8: U8Data (transparent, order:100),
  U16: U16Data (transparent, order:200),
  U32: U32Data (transparent, order:300),
  U64: U64Data (transparent, order:400),
  I8: I8Data (transparent, order:500),
  I16: I16Data (transparent, order:600),
  I32: I32Data (transparent, order:700),
  I64: I64Data (transparent, order:800),
  F16: F16Data (transparent, order:900),
  F32: F32Data (transparent, order:1000),
  F64: F64Data (transparent, order:1200),
  JPEG: JPEGData (transparent, order:1300),
}
