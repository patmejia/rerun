include "arrow/attributes.fbs";
include "rust/attributes.fbs";
include "fbs/attributes.fbs";

namespace rerun.datatypes;

// ---

struct Unused (order: 100, transparent) {
  unused: bool (order: 100, transparent);
}

/// An enum indicating the type of `Image`
// TODO(jleibs): Make this an enum once we have enum support
// https://github.com/rerun-io/rerun/issues/3009
union ImageVariant (
  "attr.rust.derive": "Copy, PartialEq",
  order: 200
) {
  /// An MxN tensor, treated as a grayscale image.
  Mono: Unused (order: 100, transparent),

  /// An MxNx3 tensor, treated as an RGB image.
  Rgb: Unused (order: 200, transparent),

  /// An MxNx4 tensor, treated as an RGBA image.
  Rgba: Unused (order: 300, transparent),

  /// An MxN tensor where each element is a ClassID, to be used with an AnnotationContext.
  Segmentation: Unused (order: 400, transparent),

  /// An MxN tensor where each element represents a depth value.
  Depth: Unused (order: 500, transparent),
}
