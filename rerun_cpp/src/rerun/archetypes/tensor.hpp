// NOTE: This file was autogenerated by re_types_builder; DO NOT EDIT.
// Based on "crates/re_types/definitions/rerun/archetypes/tensor.fbs"

#pragma once

#include "../components/tensor_data.hpp"
#include "../components/tensor_meaning.hpp"
#include "../data_cell.hpp"

#include <arrow/type_fwd.h>
#include <cstdint>
#include <optional>
#include <utility>

namespace rerun {
    namespace archetypes {
        /// A Generic Tensor
        struct Tensor {
            rerun::components::TensorData data;

            std::optional<rerun::components::TensorMeaning> meaning;

          public:
            Tensor() = default;

            Tensor(rerun::components::TensorData _data) : data(std::move(_data)) {}

            Tensor& with_meaning(rerun::components::TensorMeaning _meaning) {
                meaning = std::move(_meaning);
                return *this;
            }

            /// Returns the number of primary instances of this archetype.
            size_t num_instances() const {
                return 1;
            }

            /// Creates a list of Rerun DataCell from this archetype.
            arrow::Result<std::vector<rerun::DataCell>> to_data_cells() const;
        };
    } // namespace archetypes
} // namespace rerun
